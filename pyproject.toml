[project]
name = "neovim-pyinstaller"
version = "0.11.4"  # Should match Neovim release version
description = "Cross-platform Neovim installation via Python packaging"
readme = "README.md"
license = {text = "Apache-2.0"}  # TODO: Which license?

authors = [
    {name = "Mike Wilkerson", email = "wilkystyle@gmail.com"}
]

keywords = ["neovim", "vim", "editor", "text-editor"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Editors",
]

requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "build",
    "delocate",
    "invoke",
    "packaging",
    "requests",
    "uv",
]

# [project.urls]
# Homepage = "https://github.com/neovim/neovim"
# Repository = "https://github.com/your-username/neovim-pyinstaller"
# Issues = "https://github.com/your-username/neovim-pyinstaller/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
dev-mode-dirs = ["."]

[tool.hatch.build.targets.wheel]
ignore-vcs = true  # Don't obey .gitignore, as we want to include ignored files in the wheel
include = ["neovim_pyinstaller/"]
artifacts = ["neovim_pyinstaller/install/**/*"]

# Needed for platform-specific wheel tags. Hooks are defined inside hatch_build.py
[tool.hatch.build.targets.wheel.hooks.custom]

[project.scripts]
nvim = "neovim_pyinstaller.main:launch_neovim"

[tool.ruff.lint]
# Enable all `pydocstyle` rules, limiting to those that adhere to the
# Google convention via `convention = "google"`, below.
select = [
  "F",    # Enable pyflakes
  "D",    # Enable pydocstyle
  "W",    # Enable pycodestyle warnings
  "E",    # Enable pycodestyle errors
  "C90",  # Enable mccabe (complexity) warnings
  "N",    # Enable pep8 naming warnings
  "B",    # Enable flake8 bugbear
  "I",    # Enable isort warnings
]

extend-ignore = [
  "E501",  # Ignore line length warnings.
  "D202",  # Don't complain about blank line after docstring.
  "D203",  # Do NOT require a line between `class` and the class docstring.
  "D213",  # Multi-line summary should NOT start at the second line.
]

[tool.ruff.lint.pydocstyle]
convention = "google"
