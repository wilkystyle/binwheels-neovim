name: "Build binwheels-neovim wheels"

on:
  workflow_dispatch:
    inputs:
      wheel_version:
        description: 'binwheels_neovim wheel version, e.g. 0.11.4rc1'
        required: true
        type: string
      neovim_version_tag:
        description: 'Neovim version to download, e.g. v0.11.4'
        required: true
        type: string

jobs:

  build-windows-wheel:
    name: Build Windows wheel
    timeout-minutes: 10
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Compile Neovim and build wheel
        run: |
          make bootstrap build NEOVIM_VERSION_TAG=${{ inputs.neovim_version_tag }} WHEEL_VERSION=${{ inputs.wheel_version }}

      - name: Upload built wheel as job artifact
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0  # We're uploading a zip; no need to try to compress the zip
          if-no-files-found: error
          name: binwheels_neovim win64
          path: 'dist/*.whl'

  build-macos-wheels:
    name: Build macOS wheel
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13  # macOS intel
          - macos-latest  # macOS ARM (M-series silicon)
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Compile Neovim and build wheel
        run: |
          make bootstrap build NEOVIM_VERSION_TAG=${{ inputs.neovim_version_tag }} WHEEL_VERSION=${{ inputs.wheel_version }}

      - name: Upload built wheel as job artifact
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0  # We're uploading a zip; no need to try to compress the zip
          if-no-files-found: error
          name: binwheels_neovim ${{ matrix.os }}
          path: 'dist/*.whl'

  build-linux-wheel:
    name: Build Linux wheel
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Compile Neovim and build wheel
        uses: docker://quay.io/pypa/manylinux_2_24_x86_64:latest
        with:
          args: make bootstrap build NEOVIM_VERSION_TAG=${{ inputs.neovim_version_tag }} WHEEL_VERSION=${{ inputs.wheel_version }}

      - name: Upload built wheel as job artifact
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0  # We're uploading a zip; no need to try to compress the zip
          if-no-files-found: error
          name: binwheels_neovim Linux
          path: 'dist/*.whl'
